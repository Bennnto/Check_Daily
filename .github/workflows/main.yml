name: 🎧 Mood Markdown Music Commit

on:
  workflow_dispatch:
    inputs:
      mood:
        description: "Pick your mood of the day"
        required: true
        default: "😎 chillin"
        type: choice
        options:
          - 😎 chillin
          - 🔥 motivated
          - 🤯 overwhelmed
          - 😭 sad boi hours
          - 🧘‍♂️ zen mode
          - 🥱 sleepy af
          - 😤 grinding
          - 🤖 robot mode
          - 🥳 feeling myself
      note:
        description: "Write your vibe or story for the day"
        required: false
        default: ""

permissions:
  contents: write

jobs:
  mood_commit:
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout repo
        uses: actions/checkout@v4

      - name: ⚙️ Set up Git
        run: |
          git config --global user.name "Bennnto"
          git config --global user.email "ben.promkaew@icloud.com"

      - name: 🎧 Write mood + music to .md
        run: |
          echo '#!/bin/bash' > write_mood.sh
          echo 'MOOD="${{ github.event.inputs.mood }}"' >> write_mood.sh
          echo 'NOTE="${{ github.event.inputs.note }}"' >> write_mood.sh
          echo 'TIMESTAMP=$(date -u +"%Y-%m-%d")' >> write_mood.sh

          echo 'declare -A MUSIC' >> write_mood.sh
          # Insert your MUSIC mapping here...

          echo 'TRACK=${MUSIC[$MOOD]}' >> write_mood.sh
          echo 'echo "🧠 Mood Entry — $TIMESTAMP" >> .mood-log.md' >> write_mood.sh
          echo 'echo "**Mood**: $MOOD" >> .mood-log.md' >> write_mood.sh
          echo 'echo "**Note**: $NOTE" >> .mood-log.md' >> write_mood.sh
          echo 'echo "**Track**: [Link]($TRACK)" >> .mood-log.md' >> write_mood.sh
          echo 'echo "" >> .mood-log.md' >> write_mood.sh
          echo 'echo "---" >> .mood-log.md' >> write_mood.sh
          echo 'echo "" >> .mood-log.md' >> write_mood.sh

          bash write_mood.sh

      - name: 📊 Generate Mood Summary
        run: |
          awk '
          BEGIN {
            print "## 📊 Mood Stats (Auto Summary)\n";
            printf "| Mood               | Count |\n";
            printf "|--------------------|-------|\n";
          }
          /^\*\*Mood\*\*: / {
            sub(/\*\*Mood\*\*: /, "", $0);
            counts[$0]++;
          }
          END {
            total = 0;
            for (mood in counts) {
              printf "| %-18s | %5d |\n", mood, counts[mood];
              total += counts[mood];
            }
            printf "\n_Total Entries: %d_\n\n---\n", total;
          }' .mood-log.md > .mood-stats.md

          awk '/^## 📊 Mood Stats/,/^---/{next} {print}' .mood-log.md > .mood-log-clean.md
          cat .mood-log-clean.md .mood-stats.md > .mood-log.md
          rm .mood-log-clean.md .mood-stats.md

      - name: 🐍 Set up Python
        run: |
          python3 -m pip install --upgrade pip
          pip install matplotlib seaborn pandas

      - name: 📊 Generate Chart
        run: |
          cat << 'EOF' > chart.py
          import matplotlib.pyplot as plt
          import seaborn as sns
          import pandas as pd
          import re
          from datetime import datetime
          import os

          MOOD_SCORES = {
              '🥳 feeling myself': 5,
              '😎 chillin': 4,
              '🧘‍♂️ zen mode': 4,
              '🔥 motivated': 3,
              '😤 grinding': 3,
              '🤖 robot mode': 2,
              '🥱 sleepy af': 2,
              '🤯 overwhelmed': 1,
              '😭 sad boi hours': 0
          }

          entries = []
          with open('.mood-log.md', 'r') as f:
              lines = f.readlines()
              current_date = None
              for line in lines:
                  if '🧠 Mood Entry —' in line:
                      current_date = line.strip().split('—')[-1].strip()
                  elif '**Mood**:' in line:
                      mood = re.search(r'\*\*Mood\*\*: (.+)', line).group(1).strip()
                      score = MOOD_SCORES.get(mood, None)
                      if score is not None and current_date:
                          entries.append({'date': current_date, 'score': score})

          df = pd.DataFrame(entries)
          df['date'] = pd.to_datetime(df['date'])
          df = df.set_index('date').resample('D').max().fillna(0).reset_index()
          df['dow'] = df['date'].dt.weekday
          df['week'] = df['date'].dt.isocalendar().week
          pivot = df.pivot(index='dow', columns='week', values='score')

          plt.figure(figsize=(12, 3))
          pastel_palette = sns.light_palette("skyblue", n_colors=6)
          sns.heatmap(pivot, cmap=pastel_palette, cbar=True, linewidths=0.5, linecolor='white', square=True)
          plt.yticks(ticks=range(7), labels=['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'], rotation=0)
          plt.title('🌈 Mood Grid (Pastel Vibes)', fontsize=12)
          plt.tight_layout()

          os.makedirs('assets', exist_ok=True)
          plt.savefig('assets/mood-chart.png', dpi=200)
          EOF

          python3 chart.py

      - name: 🖼️ Insert Mood Chart into Markdown
        run: |
          awk '!/\!\[Mood Chart\]\(assets\/mood-chart\.png\)/' .mood-log.md > .temp-log.md
          echo -e "\n![Mood Chart](assets/mood-chart.png)\n" >> .temp-log.md
          mv .temp-log.md .mood-log.md

      - name: ✅ Commit & Push
        run: |
          git add .mood-log.md
          git add assets/mood-chart.png

          COMMIT_MSG="🌈 Mood Check-in: ${{ github.event.inputs.mood }}"
          NOTE="${{ github.event.inputs.note }}"

          if [ -n "$NOTE" ]; then
            COMMIT_MSG="$COMMIT_MSG — $NOTE"
          fi

          if git diff --cached --quiet; then
            echo "🛑 No changes to commit."
          else
            git commit -m "$COMMIT_MSG"
            git pull
            git push
          fi
